function __gitStashSize {
  lines=$(git stash list -n 100 2> /dev/null) || return
  if [ "${#lines}" -gt 0 ]
  then
    count=$(echo "$lines" | wc -l | sed 's/^[ \t]*//') # strip tabs
    echo " ["${count#} "stash] "
  fi
}

function __localGitID() {
    git rev-parse HEAD
}

function __remoteGitID() {
    git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD)
}
#function __findCommonAncestor() {
#    git merge-base $1 $2
#}

function __findGitRoot() {
    RESULT=`git rev-parse --show-toplevel 2>/dev/null`
    if test "x$RESULT" = "x"; then
        echo "None"
    else
        echo $RESULT
    fi
}
function __colorHash() {
    sum=`echo $1 | sum | cut -f 1 -d' '`
    echo -ne "\033[01;`expr 30 + $sum % 8`m"
}
function __addUserHost() {
    PS1=$PS1'\[\033[04;34m\]\u\[\033[01;00m\]@\[\033[04;34m\]\h\[\033[00m\]'
}
function __addCurdir() {
    PS1=$PS1'\[$(__colorHash $(__findGitRoot))\]\W\[\033[00m\]'
}
function __addGitInfo() {
    PS1=$PS1'\[$(__colorHash $(__git_ps1  " (%s)"))\]$(__git_ps1 " (%s)")\[\033[00m\]'
}
function __addMachineStatus() {
    line=`cat ~/.machinestatus`
    PS1=$PS1'[`echo -n $line`]'
}
function __addGitStashSize() {
    PS1=$PS1'\[\033[01;31m\]$(__gitStashSize)\[\033[00m\]'
}
function __exportPrompt() {
    PS1='${debian_chroot:+($debian_chroot)}'
    __addUserHost
    PS1=$PS1':'
    __addCurdir
    __addGitInfo
    __addMachineStatus
    __addGitStashSize
    PS1=$PS1'\$ '
}

# Comment in the above and uncomment this below for a color prompt
__exportPrompt

